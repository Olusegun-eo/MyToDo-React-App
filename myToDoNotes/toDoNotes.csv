1..Create react app...npn create-react-app todoapp
2: Goto Materializecss.com===>getting started==>CDN==>copy the first-link
3:Goto publicFolder ==>index.html then paste the link jst above <title> tag
4Goto src: delete App.css, logo.cv, testApp and 
....We're going to store our state(store todos inside the stateComp) inside the rootComp(App.js) wich is our containerComp...We wnt to outpt our todos in the renderTemplt inside divComp but not directly but as props to a separate functionalCompnt.....<Todos todos = {this.state.todos}/>
So What i will do is to have a separate Compont responsible for listing my todos then refence it inthe renderTemplt....So create a file called Todos.js as a functionalCompnt and pass the state({todos}) inside it as a detsructured param...const Todos = ({todos}) =>{we wnt to map tru a list here and return some JSX for eachIndividual items in this list & out the list})......
const todoList = todos.length(/*check if there is/are todos left then render them/it but there is none then render nothing*/) ? (
    todos.map(todo => {HERE, grab them(todes).map(grab eachList cyce tru them and fire a func on it) by{returning each in d List inside(div tag with unique key attrb as todos then ADD the content wil wnt to show==>{todos.content})}....After this...go AND OUTPUT {todoList}
      return (
        <div className = "collection-item" key= {todo.id}>
        <span>{todo.content}</span>
        </div>
      )
    })
It is looking wider...let's ADD a simple className('container') around it in d App.js ContainerComponent... 'App' with 'todo-app container';
Next: I wnt to hook up a simple event to delete wen we click on each todos to deletes it frm d list to relate with d state. Hence, "deleteTodo" func will be cretated in d rootComp pass it as a props to <Todos deleteTodo={this.deleteTodo}/>, then also a props to const todoList = ({todos, deleteTodo})= {} t have access to it
Next it to attach a clickEvent(onClick) to the span (<span onClick={() =>{deleteTodo.}}>{todo.content}</span>)i.e to eachIndividual item When its output so that wen d user click on it it fires d func(i.e delete it); And pass-in anonymouslt 'deleteTodo'func with(todo.id) as its param.
Inside the new func(deleteTodo)...Next is to filter the state objects(array==elmn=>todos(Remember filter is none destructive, it retruns a new array, hence we can do it directly on this property (id)) as follows.... const todos = todos.filter(todo => {return todo.id !== id})  then setState... this.setState({todos: todos})...Note that here the key(todos) is thesame as value(todos).. because of that we can just write like this.... this.setState({todos})


Next is to create a separateFile called "AddForm.js"...we nid a local state in a Compnt to store what user typed into the inputField hence this makes the form a class-Based-Compont....we need a form tag with onSubmit event, we need a label and one inputField with onChange event that fires wen user makes update...
Next..create handleChange func....We wnt to setState so that the content in our inputField will be equal/passed to content in the state...hence set content prop in state to empty...state =content: ''; & handleChange = (e) =>{this.setstate({content: e.target.vlaue(watevaUserType-in)})}
Next..create handleSubmit=(e)=>{prevent d defautBrowser frm refresh....e.preventDefault();....then console.log(this.state)..But note we wnt to output a function not log out Persay}
Next...we dnt jst wnt to log to d console but output to the browser..how? 1st create a func "addTodo" pass it as props to isnide the rootComp that will interact with the state&add todo to d list that will take-in a new"todo"(ie..wat d userTypedIn)as param. ....NOTE the reason we do not pass this addTodo func as a prop in AddTodo file is bcos the file is a Class-Based-Componwn and in class Based-Componet props are automatically generated...NEXT is to call d "addTodo" func as a prop to Comp "AddTodo"in d "App.js" renderTemplt....like..<AddTodo addTodo={this.addTodo}/>. This func is now ACCESSIBLE in that Comp as props wich is automatically generated by the class...WE NOW OUTPUT "addTodo" func inside handleSubmit func of AddTodoComp since we have passed it a props like this....this.props.addTodo(this.state).
NEXT inside AddTodo file...we will call the func "addTodo"=>this.props.addTodo & pass-in the the class state of this very func with "content" obj to it as (this.state)
Next...we receive this newly-created obj "todo" in addTodo func as param in App.js. We can do smthg wit it by adding it the rootComp state array of objs(=todos). but b4 we do that we nid to generate some kind of random "id" in addTodo func by adding 'id' toThe 'todo' that we received & set it to Math.rondom..i.e todo.id= Math.random()==>Note: this may not be unique now BUT LATER WE will USE RANDOMLY generated ids by DATABASE
NEXT is to create a newArray "todos" bcos we alter the old one directly and pass it& equate it to oldArray "todos" tru sprea operator...i.e let todos = [...this.state.todos, todo], HEREe we're creating newArray and dumping d contents of oldArray using spreadOperator and newly created Array to it. So, a newArray is now stored inside "todos" Plu the Old ones. THEN we can setState to update the new todos..this.setState({todos: todos}) since the key is theSame with the value, we can just write ({todos})
FINALLY, WE NEED TO EMPTY THE INPUT FIELD(value) after ADDING a new todo....how? 1stly, when do we wnt to Empty that field? After user click submit...Hence, inside handleSubmit func we have to RESET state to empty content...this.setState({content:''}) But notice this doesn't delete it
Next inside AddTodo is to set the value directly of the inputField equal to the state...ie <input type="text" onChange={this.handleChange}value ={this.state.content}></input> so that wen the state empty the inputField is empty as well